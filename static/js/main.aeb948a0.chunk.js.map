{"version":3,"sources":["components/Profile/index.js","components/Repository/index.js","components/Repositories/index.js","components/App/index.js","scripts/reportWebVitals.js","index.js"],"names":["Profile","props","console","log","login","avatar_url","html_url","company","name","location","bio","handleBackClick","hireable","email","style","backgroundImage","className","href","icon","faAt","faPaperclip","faUsers","faMapMarkedAlt","onClick","Repository","description","language","stargazers_count","forks","handleRepositoryClick","fork","_private","private","faCodeBranch","faUserSecret","faCode","faStar","Repositories","repositories","JSON","parse","length","map","repository","id","App","state","gists","localStorage","getItem","KEY_GISTS_CACHE","profile","KEY_PROFILE_CACHE","KEY_REPOSITORIES_CACHE","repositoriesVisibility","KEY_REPOSITORIES_VISIBILITY_CACHE","updateProfile","bind","handleSubmit","handleRepositoriesVisibilityClick","document","addEventListener","handleDocumentKeypress","removeEventListener","this","action","type","placeholder","htmlFor","faArrowCircleRight","event","preventDefault","isEnableSubmitInFormGithubProfile","disableSubmitInFormGithubProfile","username","forms","elements","value","handleErrorInvalidUsername","enableSubmitInFormGithubProfile","setLoadingMessage","endpoint","fetch","then","response","json","message","handleErrorUnknownUser","foo","toLowerCase","includes","handleErrorAPIRateLimitExceeded","removeClassHasErrorForFormGithubProfile","repos_url","gists_url","replace","updateRepositories","updateGists","showPortfolioSection","catch","reason","error","finally","target","classList","contains","closest","url","dataset","window","currentActivebutton","querySelector","remove","add","updateRepositoriesVisibility","toggleRepositoriesVisibility","setItem","stringify","setState","portfolioSection","scroll","top","clickOnRepositoriesVisibilityAll","mainSection","keyCode","showMainSection","querySelectorAll","isFork","addClassHasErrorForFormGithubProfile","formGithubProfile","setTimeout","setAttribute","removeAttribute","hasAttribute","innerHTML","click","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mXAiDeA,MAxCf,SAAiBC,GAEbC,QAAQC,IAAI,UAAW,CAACF,UAIxB,IACIG,EAEAH,EAFAG,MAAOC,EAEPJ,EAFOI,WAAYC,EAEnBL,EAFmBK,SAAUC,EAE7BN,EAF6BM,QAC7BC,EACAP,EADAO,KAAMC,EACNR,EADMQ,SAAUC,EAChBT,EADgBS,IAAKC,EACrBV,EADqBU,gBAAiBC,EACtCX,EADsCW,SAAUC,EAChDZ,EADgDY,MAG9CC,EAAQ,CACVC,gBAAgB,OAAD,OAASV,EAAU,MAGtC,OACI,0BAASW,UAAU,UAAS,UACxB,qBAAKA,UAAU,SAASF,MAAOA,IAC/B,sBAAKE,UAAU,sBAAqB,UAC/BR,EAAO,qBAAKQ,UAAU,WAAU,SAAER,IAAc,KAChDJ,EAAQ,mBAAGa,KAAMX,EAAS,SAAC,sBAAKU,UAAU,QAAO,cAAGZ,OAAmB,KACvEM,EAAM,qBAAKM,UAAU,MAAK,SAAEN,IAAa,QAE9C,sBAAKM,UAAU,iBAAgB,UAC1BH,GAAS,sBAAKG,UAAU,QAAO,UAAC,cAAC,IAAe,CAACE,KAAMC,MAAO,OAAON,KACrED,GAAY,sBAAKI,UAAU,WAAU,UAAC,cAAC,IAAe,CAACE,KAAME,MAAc,+BAC3Eb,EAAU,sBAAKS,UAAU,UAAS,UAAC,cAAC,IAAe,CAACE,KAAMG,MAAU,OAAOd,KAAiB,KAC5FE,EAAW,sBAAKO,UAAU,WAAU,UAAC,cAAC,IAAe,CAACE,KAAMI,MAAiB,OAAOb,KAAkB,QAE3G,qBAAKO,UAAU,gBAAe,SAC1B,mBAAGC,KAAK,qBAAqBD,UAAU,SAAQ,4BAEnD,qBAAKA,UAAU,iBAAgB,SAC3B,wBAAQO,QAASZ,EAAgB,sBAKjD,E,YCZea,MA5Bf,SAAqBvB,GAEjB,IACIO,EACAP,EADAO,KAAMiB,EACNxB,EADMwB,YAAaC,EACnBzB,EADmByB,SAAUC,EAC7B1B,EAD6B0B,iBAAkBC,EAC/C3B,EAD+C2B,MAAOtB,EACtDL,EADsDK,SAAUuB,EAChE5B,EADgE4B,sBAAuBC,EACvF7B,EADuF6B,KAAeC,EACtG9B,EAD6F+B,QAGjG,OACI,0BAAShB,UAAU,aAAa,WAAUV,EAAUiB,QAASM,EAAuB,eAAcC,EAAK,UACnG,sBAAKd,UAAU,oBAAmB,UAE1Bc,EAAO,uBAAMd,UAAU,yBAAwB,UAAC,cAAC,IAAe,CAACE,KAAMe,MAAe,cAAoB,KAG1GF,EAAW,uBAAMf,UAAU,4BAA2B,UAAC,cAAC,IAAe,CAACE,KAAMgB,MAAe,iBAAuB,QAG5H,sBAAMlB,UAAU,kBAAiB,SAAER,IACnC,sBAAMQ,UAAU,yBAAwB,SAAES,IAC1C,sBAAKT,UAAU,mBAAkB,UAC7B,uBAAMA,UAAU,4BAA2B,UAAC,cAAC,IAAe,CAACE,KAAMiB,MAAS,OAAOT,KACnF,uBAAMV,UAAU,yBAAwB,UAAC,cAAC,IAAe,CAACE,KAAMkB,MAAS,OAAOT,KAChF,uBAAMX,UAAU,yBAAwB,UAAC,cAAC,IAAe,CAACE,KAAMe,MAAe,OAAOL,UAKtG,ECTeS,MApBf,SAAsBpC,GAElB,IAAKqC,EAAuCrC,EAAvCqC,aAAcT,EAAyB5B,EAAzB4B,sBAInB,OAHKS,IAAcA,EAAe,IAC9B,kBAAoBA,IAAcA,EAAeC,KAAKC,MAAMF,IAG5D,yBAAStB,UAAU,eAAc,SAEzB,EAAIsB,EAAaG,OAASH,EAAaI,KAAI,SAAAC,GAAU,OACjD,cAAC,EAAU,2BAAyBA,GAAU,IAAEd,sBAAuBA,IAAtDc,EAAWC,GAAmE,IAE/F,2DAMpB,ECZMC,EAAG,kDAcL,WAAY5C,GAAQ,IAAD,EAM2E,OAN3E,qBACf,cAAMA,IARV6C,MAAQ,CACJC,MAAOC,aAAaC,QAAQJ,EAAIK,iBAChCC,QAASH,aAAaC,QAAQJ,EAAIO,mBAClCd,aAAcU,aAAaC,QAAQJ,EAAIQ,wBACvCC,uBAAwBN,aAAaC,QAAQJ,EAAIU,oCAMjD,EAAKC,cAAgB,EAAKA,cAAcC,KAAK,gBAC7C,EAAKC,aAAe,EAAKA,aAAaD,KAAK,gBAC3C,EAAK5B,sBAAwB,EAAKA,sBAAsB4B,KAAK,gBAC7D,EAAKE,kCAAoC,EAAKA,kCAAkCF,KAAK,gBAAK,CAC9F,CAuWC,OAvWA,8CAGD,WACIG,SAASC,iBAAiB,UAAWhB,EAAIiB,wBAAwB,EACrE,GAAC,kCAGD,WACIF,SAASG,oBAAoB,UAAWlB,EAAIiB,wBAAwB,EACxE,GAAC,oBAGD,WAEI,MAAgCE,KAAKlB,MAA9BK,EAAO,EAAPA,QAASb,EAAY,EAAZA,aAEhB,OACI,qBAAKtB,UAAU,MAAK,SAChB,0BAASA,UAAU,cAAa,UAC5B,yBAASA,UAAU,wBAAuB,SACtC,sBAAKA,UAAU,YAAW,UACtB,yDAA2B,uBAAK,6BAChC,uBAAMiD,OAAO,IAAIzD,KAAK,iBAAgB,UAClC,sBAAKQ,UAAU,aAAY,UACvB,uBAAOkD,KAAK,OAAO1D,KAAK,WAAWoC,GAAG,WAAWuB,YAAY,MAC7D,uBAAOC,QAAQ,WAAU,8BAE7B,wBAAQF,KAAK,SAAS1D,KAAK,wBACnBe,QAASyC,KAAKN,aAAa,SAC/B,cAAC,IAAe,CAACxC,KAAMmD,QAE3B,wBAAOrD,UAAU,uBAAsB,UACnC,uBAAOA,UAAU,eAAe,kBAAgB,eAAc,0BAC9D,uBAAOA,UAAU,eAAe,kBAAgB,mBAAkB,8BAElE,uBAAOA,UAAU,eAAe,kBAAgB,0BAAyB,2CAGjF,qBAAKA,UAAU,0CAGvB,0BAASA,UAAU,6BAA4B,UAC3C,uBAAOA,UAAU,gCAA+B,SAC5C,cAAC,EAAO,2BAAKmC,GAAO,IAAExC,gBAAiBkC,EAAIlC,qBAE/C,0BAASK,UAAU,qCAAoC,UACnD,yBAAQA,UAAU,4CAA2C,UACzD,8CACA,qBAAKA,UAAU,6CAA4C,SACvD,sBAAKA,UAAU,cAAc,YAAU,0BAAyB,UAC5D,wBAAQA,UAAU,SAAS,aAAW,MAC9BO,QAASyC,KAAKL,kCAAkC,iBAExD,wBAAQ,aAAW,OACXpC,QAASyC,KAAKL,kCAAkC,kBAExD,wBAAQ,aAAW,QACXpC,QAASyC,KAAKL,kCAAkC,2BAKpE,cAAC,EAAY,CACTrB,aAAcA,EACdT,sBAAuBmC,KAAKnC,kCAMxD,GAAC,0BAGD,SAAayC,GAAQ,IAAD,OAGhB,GAFAA,EAAMC,kBAEF,IAAU1B,EAAI2B,oCAAlB,CAEA3B,EAAI4B,mCAEJ,IACMC,EADoBd,SAASe,MAAM,kBACNC,SAASF,SAASG,MAErD,IAAKH,EAGD,OAFA7B,EAAIiC,kCACJjC,EAAIkC,kCAIRlC,EAAImC,kBAAkB,6BAEtB,IAAMC,EAAQ,uCAAmCP,GACjDQ,MAAMD,GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAhC,GACF,IAAOmC,EAAWnC,EAAXmC,QAEP,GAAMA,GAAW,cAAgBA,EAI7B,OAHAzC,EAAI0C,yBACJ1C,EAAImC,kBAAkB,SACtBnC,EAAIkC,kCAKR,GADA7E,QAAQC,IAAI,OAAQ,CAACmF,UAASE,MAAOF,GAAWA,EAAQG,cAAcC,SAAS,iCACzEJ,GAAWA,EAAQG,cAAcC,SAAS,+BAI5C,OAHA7C,EAAI8C,kCACJ9C,EAAImC,kBAAkB,SACtBnC,EAAIkC,kCAIRlC,EAAI+C,0CAEJ,EAAKpC,cAAcL,GACnB,IAAK0C,EAAwB1C,EAAxB0C,UAAWC,EAAa3C,EAAb2C,UAEVA,GAAa,kBAAoBA,IAAWA,EAAYA,EAAUC,QAAQ,aAAc,KAE9FlD,EAAImC,kBAAkB,2BAEtBE,MAAMW,GACDV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAA7C,GACF,EAAK0D,mBAAmB1D,GAExBO,EAAImC,kBAAkB,oBAEtBE,MAAMY,GACDX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAApC,GACF,EAAKkD,YAAYlD,GAEjBF,EAAImC,kBAAkB,IACtBnC,EAAIkC,kCAEJlC,EAAIqD,sBACR,IACCC,OAAM,SAAAC,GACHlG,QAAQmG,MAAMD,GACdvD,EAAImC,kBAAkB,IACtBnC,EAAIkC,iCACR,GAER,IACCoB,OAAM,SAAAC,GACHlG,QAAQmG,MAAMD,GACdvD,EAAImC,kBAAkB,IACtBnC,EAAIkC,iCACR,GACR,IACCoB,OAAM,SAAAC,GACHlG,QAAQmG,MAAMD,GACdvD,EAAImC,kBAAkB,IACtBnC,EAAIkC,iCACR,IACCuB,SAAQ,WAAO,GAhFyC,CAiFjE,GAAC,mCAGD,SAAsBhC,GAClBA,EAAMC,iBAEN,IAAKgC,EAAUjC,EAAViC,OAEAA,EAAOC,UAAUC,SAAS,gBAC3BF,EAASA,EAAOG,QAAQ,gBAG5B,IAAOC,EAAOJ,EAAOK,QAAdD,IAEPE,OAAOpG,SAASQ,KAAO0F,CAC3B,GAAC,+CAGD,SAAkCrC,GAC9BA,EAAMC,iBAEN,IAAOgC,EAAUjC,EAAViC,OAEA1B,EAAS0B,EAAOK,QAAhB/B,MAIDiC,EAFaP,EAAOG,QAAQ,gBAEKK,cAAc,iBAC/CD,GAAqBA,EAAoBN,UAAUQ,OAAO,UAEhET,EAAOC,UAAUS,IAAI,UAErBjD,KAAKkD,6BAA6BrC,GAElChC,EAAIsE,8BACR,GAAC,2BAGD,SAAchE,GACVjD,QAAQC,IAAI,wBAAyB,CAACgD,YACjCA,IAASA,EAAU,CAAC,GACzBH,aAAaoE,QAAQvE,EAAIO,kBAAmBb,KAAK8E,UAAUlE,IAC3Da,KAAKsD,SAAS,CAACnE,WACnB,GAAC,gCAGD,WAAuC,IAApBb,EAAY,uDAAG,CAAC,EAC/BpC,QAAQC,IAAI,6BAA8B,CAACmC,iBACtCA,IAAcA,EAAe,CAAC,GACnCU,aAAaoE,QAAQvE,EAAIQ,uBAAwBd,KAAK8E,UAAU/E,IAChE0B,KAAKsD,SAAS,CAAChF,gBACnB,GAAC,yBAGD,WAAyB,IAAbS,EAAK,uDAAG,CAAC,EACjB7C,QAAQC,IAAI,sBAAuB,CAAC4C,UAC/BA,IAAOA,EAAQ,CAAC,GACrBC,aAAaoE,QAAQvE,EAAIK,gBAAiBX,KAAK8E,UAAUtE,IACzDiB,KAAKsD,SAAS,CAACvE,SACnB,GAAC,0CAGD,WAA8D,IAAjCO,EAAsB,uDAAG,MAClDpD,QAAQC,IAAI,uCAAwC,CAACmD,2BACrDN,aAAaoE,QAAQvE,EAAIU,kCAAmCD,GAC5DU,KAAKsD,SAAS,CAAChE,0BACnB,IAAC,mCAGD,WACI,IAAMiE,EAAmB3D,SAASmD,cAAc,0BAChDQ,EAAiBf,UAAUS,IAAI,QAC/BM,EAAiBf,UAAUQ,OAAO,QAEdpD,SAASmD,cAAc,qBAC/BP,UAAUS,IAAI,QAE1BM,EAAiBC,OAAO,CAACC,IAAK,IAE9B5E,EAAI6E,kCACR,GAAC,6BAGD,WACI,IAAMC,EAAc/D,SAASmD,cAAc,qBAC3CY,EAAYnB,UAAUS,IAAI,QAC1BU,EAAYnB,UAAUQ,OAAO,QAEJpD,SAASmD,cAAc,0BAC/BP,UAAUS,IAAI,OACnC,GAAC,oCAGD,SAA8B3C,GAEtB,KADcA,EAAXsD,SACa/E,EAAIgF,iBAC5B,GAAC,0CAGD,WACI,IAAIvE,EAAyBN,aAAaC,QAAQJ,EAAIU,mCACtD,GAAKD,EAAL,CAEA,IACmC,EAD7BhB,EAAesB,SAASkE,iBAAiB,eAAc,cACtCxF,GAAY,IAAnC,2BAAqC,CAAC,IAA7BK,EAAU,QAERoF,EAAUpF,EAAWiE,QAArBmB,OAEH,SAAWzE,GAA0B,SAAWyE,EAKhD,UAAYzE,GAA0B,UAAYyE,EAKtDpF,EAAW6D,UAAUQ,OAAO,QAJxBrE,EAAW6D,UAAUS,IAAI,QALzBtE,EAAW6D,UAAUS,IAAI,OAWjC,CAAC,+BAnBkC,CAoBvC,GAAC,oCAGD,WACIpE,EAAI+C,wCAAwC,oBAC5C/C,EAAI+C,wCAAwC,2BAC5C/C,EAAImF,qCAAqC,eAC7C,GAAC,6CAED,WACInF,EAAI+C,wCAAwC,oBAC5C/C,EAAI+C,wCAAwC,gBAC5C/C,EAAImF,qCAAqC,0BAC7C,GAAC,wCAGD,WACInF,EAAI+C,wCAAwC,gBAC5C/C,EAAI+C,wCAAwC,2BAC5C/C,EAAImF,qCAAqC,mBAC7C,GAAC,kDAGD,SAA4C9D,GACxC,IAAM+D,EAAoBrE,SAASe,MAAM,kBACzCsD,EAAkBzB,UAAUS,IAAI,aAChCgB,EAAkBzB,UAAUS,IAAI,aAAe/C,GAE/CgE,YAAW,WACPD,EAAkBzB,UAAUQ,OAAO,aACnCiB,EAAkBzB,UAAUQ,OAAO,aAAe9C,EACtD,GAAG,IACP,GAAC,qDAGD,WACI,IAAM+D,EAAoBrE,SAASe,MAAM,kBACzCsD,EAAkBzB,UAAUQ,OAAO,aACnCiB,EAAkBzB,UAAUQ,OAAO,0BACnCiB,EAAkBzB,UAAUQ,OAAO,8BACnCiB,EAAkBzB,UAAUQ,OAAO,oCACvC,GAAC,8CAGD,WAC8BpD,SAASe,MAAM,kBACFC,SAAgC,sBAC1DuD,aAAa,WAAY,WAC1C,GAAC,6CAGD,WAC8BvE,SAASe,MAAM,kBACFC,SAAgC,sBAC1DwD,gBAAgB,WACjC,GAAC,+CAGD,WAGI,OAAO,IAFmBxE,SAASe,MAAM,kBACFC,SAAgC,sBACzCyD,aAAa,WAC/C,GAAC,6BAGD,SAAuB/D,GACnBA,EAAMC,iBAEN1B,EAAIgF,iBACR,GAAC,+BAED,SAAyBvC,GACE1B,SAASmD,cAAc,qCAC/BuB,UAAYhD,CAC/B,GAAC,8CAED,WACmC1B,SAASmD,cAAc,qDACbA,cAAc,4BAC7CwB,OACd,KAAC,EA5XI,CAASC,IAAMC,WAAlB5F,EAEKK,gBAAkB,+BAFvBL,EAGKO,kBAAoB,iCAHzBP,EAIKQ,uBAAyB,sCAJ9BR,EAKKU,kCAAoC,iDA2XhCV,QC9XA6F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,ECJAO,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENxF,SAASyF,eAAe,SAM1BX,G","file":"static/js/main.aeb948a0.chunk.js","sourcesContent":["/* eslint-disable no-script-url */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport './index.css'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faUsers, faMapMarkedAlt, faPaperclip, faAt} from '@fortawesome/free-solid-svg-icons'\n\nimport React from \"react\";\n\nfunction Profile(props) {\n\n    console.log('Profile', {props})\n\n    // id, node_id, gravatar_id, url, followers_url, following_url, gists_url,\n    // starred_url, subscriptions_url, organizations_url, repos_url, events_url, received_events_url, type, site_admin,\n    const {\n        login, avatar_url, html_url, company,\n        name, location, bio, handleBackClick, hireable, email\n    } = props\n\n    const style = {\n        backgroundImage: `url(${avatar_url})`\n    }\n\n    return (\n        <article className=\"Profile\">\n            <div className=\"avatar\" style={style}></div>\n            <div className=\"Profile-description\">\n                {name ? <div className=\"username\">{name}</div> : null}\n                {login ? <a href={html_url}><div className=\"login\">@{login}</div></a> : null}\n                {bio ? <div className=\"bio\">{bio}</div> : null}\n            </div>\n            <div className=\"Profile-status\">\n                {email && <div className=\"email\"><FontAwesomeIcon icon={faAt}/>&nbsp;{email}</div>}\n                {hireable && <div className=\"hireable\"><FontAwesomeIcon icon={faPaperclip}/>&nbsp;En recherche d'emploi</div>}\n                {company ? <div className=\"company\"><FontAwesomeIcon icon={faUsers}/>&nbsp;{company}</div> : null}\n                {location ? <div className=\"location\"><FontAwesomeIcon icon={faMapMarkedAlt}/>&nbsp;{location}</div> : null}\n            </div>\n            <div className=\"Profile-links\">\n                <a href=\"javascript:void(0)\" className=\"active\">Repositories</a>\n            </div>\n            <div className=\"Profile-footer\">\n                <button onClick={handleBackClick}>Back</button>\n            </div>\n        </article>\n    )\n\n}\n\nexport default Profile\n","import './index.css'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCode, faStar, faCodeBranch, faUserSecret} from '@fortawesome/free-solid-svg-icons'\nimport React from \"react\";\n\n\nfunction Repository (props) {\n\n    let {\n        name, description, language, stargazers_count, forks, html_url, handleRepositoryClick, fork, private: _private\n    } = props\n\n    return (\n        <article className=\"Repository\" data-url={html_url} onClick={handleRepositoryClick} data-is-fork={fork}>\n            <div className=\"Repository-labels\">\n                {\n                    fork ? <span className=\"Repository-labels-fork\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;Fork</span> : null\n                }\n                {\n                    _private ? <span className=\"Repository-labels-private\"><FontAwesomeIcon icon={faUserSecret}/>&nbsp;Private</span> : null\n                }\n            </div>\n            <span className=\"Repository-name\">{name}</span>\n            <span className=\"Repository-description\">{description}</span>\n            <div className=\"Repository-infos\">\n                <span className=\"Repository-infos-language\"><FontAwesomeIcon icon={faCode}/>&nbsp;{language}</span>\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faStar}/>&nbsp;{stargazers_count}</span>\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;{forks}</span>\n            </div>\n        </article>\n    )\n\n}\n\nexport default Repository\n","import './index.css'\nimport React from \"react\";\nimport Repository from \"../Repository\";\n\nfunction Repositories(props) {\n\n    let {repositories, handleRepositoryClick} = props\n    if (!repositories) repositories = []\n    if ('string' === typeof repositories) repositories = JSON.parse(repositories)\n\n    return (\n        <section className=\"Repositories\">\n            {\n                0 < repositories.length ? repositories.map(repository => (\n                    <Repository key={repository.id} {...repository} handleRepositoryClick={handleRepositoryClick}/>\n                )) : (\n                    <article>No repository found</article>\n                )\n            }\n        </section>\n    )\n\n}\n\nexport default Repositories\n","import './index.css';\n\nimport React from \"react\";\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\n\nimport Profile from \"../Profile\";\nimport Repositories from \"../Repositories\";\n\nclass App extends React.Component {\n\n    static KEY_GISTS_CACHE = 'github_portfolio_gists_cache'\n    static KEY_PROFILE_CACHE = 'github_portfolio_profile_cache'\n    static KEY_REPOSITORIES_CACHE = 'github_portfolio_repositories_cache'\n    static KEY_REPOSITORIES_VISIBILITY_CACHE = 'github_portfolio_repositories_visibility_cache'\n\n    state = {\n        gists: localStorage.getItem(App.KEY_GISTS_CACHE),\n        profile: localStorage.getItem(App.KEY_PROFILE_CACHE),\n        repositories: localStorage.getItem(App.KEY_REPOSITORIES_CACHE),\n        repositoriesVisibility: localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.updateProfile = this.updateProfile.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleRepositoryClick = this.handleRepositoryClick.bind(this)\n        this.handleRepositoriesVisibilityClick = this.handleRepositoriesVisibilityClick.bind(this)\n    }\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    render() {\n\n        const {profile, repositories} = this.state\n\n        return (\n            <div className=\"App\">\n                <section className=\"App-section\">\n                    <section className=\"App-section-main show\">\n                        <div className=\"container\">\n                            <h1>Select a github profile<br/>to generate a portfolio</h1>\n                            <form action=\"#\" name=\"github-profile\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\" \"/>\n                                    <label htmlFor=\"username\">Pseudo Github</label>\n                                </div>\n                                <button type=\"submit\" name=\"submit_github_profile\"\n                                        onClick={this.handleSubmit}>\n                                    <FontAwesomeIcon icon={faArrowCircleRight}/>\n                                </button>\n                                <aside className=\"error-helper-wrapper\">\n                                    <small className=\"error-helper\" aria-labelledby=\"unknown-user\">Unknown user</small>\n                                    <small className=\"error-helper\" aria-labelledby=\"invalid-username\">Invalid\n                                        username</small>\n                                    <small className=\"error-helper\" aria-labelledby=\"api-rate-limit-exceeded\">API rate limit exceeded</small>\n                                </aside>\n                            </form>\n                            <div className=\"App-section-main-loading-wrapper\"></div>\n                        </div>\n                    </section>\n                    <section className=\"App-section-portfolio hide\">\n                        <aside className=\"App-section-portfolio-profile\">\n                            <Profile {...profile} handleBackClick={App.handleBackClick}/>\n                        </aside>\n                        <section className=\"App-section-portfolio-repositories\">\n                            <header className=\"App-section-portfolio-repositories-header\">\n                                <h2>Repositories</h2>\n                                <div className=\"App-section-portfolio-repositories-actions\">\n                                    <div className=\"list-button\" data-name=\"repositories-visibility\">\n                                        <button className=\"active\" data-value=\"all\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>All\n                                        </button>\n                                        <button data-value=\"owns\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>Owns\n                                        </button>\n                                        <button data-value=\"forks\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>Forks\n                                        </button>\n                                    </div>\n                                </div>\n                            </header>\n                            <Repositories\n                                repositories={repositories}\n                                handleRepositoryClick={this.handleRepositoryClick} />\n                        </section>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (false === App.isEnableSubmitInFormGithubProfile()) return\n\n        App.disableSubmitInFormGithubProfile()\n\n        const formGithubProfile = document.forms['github-profile']\n        const username = formGithubProfile.elements.username.value\n\n        if (!username) {\n            App.handleErrorInvalidUsername()\n            App.enableSubmitInFormGithubProfile()\n            return\n        }\n\n        App.setLoadingMessage('Retrieving github profile')\n\n        const endpoint = `https://api.github.com/users/${username}`\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(profile => {\n                const {message} = profile\n\n                if (!!message && 'Not Found' === message) {\n                    App.handleErrorUnknownUser()\n                    App.setLoadingMessage('')\n                    App.enableSubmitInFormGithubProfile()\n                    return\n                }\n\n                console.log('gooo', {message, foo: !!message && message.toLowerCase().includes('api rate limit exceeded for')})\n                if (!!message && message.toLowerCase().includes('api rate limit exceeded for')) {\n                    App.handleErrorAPIRateLimitExceeded()\n                    App.setLoadingMessage('')\n                    App.enableSubmitInFormGithubProfile()\n                    return\n                }\n\n                App.removeClassHasErrorForFormGithubProfile()\n\n                this.updateProfile(profile)\n                let {repos_url, gists_url} = profile\n\n                if (!!gists_url && 'string' === typeof gists_url) gists_url = gists_url.replace('{/gist_id}', '')\n\n                App.setLoadingMessage('Retrieving repositories')\n\n                fetch(repos_url)\n                    .then(response => response.json())\n                    .then(repositories => {\n                        this.updateRepositories(repositories)\n\n                        App.setLoadingMessage('Retrieving gists')\n\n                        fetch(gists_url)\n                            .then(response => response.json())\n                            .then(gists => {\n                                this.updateGists(gists)\n\n                                App.setLoadingMessage('')\n                                App.enableSubmitInFormGithubProfile()\n\n                                App.showPortfolioSection()\n                            })\n                            .catch(reason => {\n                                console.error(reason)\n                                App.setLoadingMessage('')\n                                App.enableSubmitInFormGithubProfile()\n                            })\n\n                    })\n                    .catch(reason => {\n                        console.error(reason)\n                        App.setLoadingMessage('')\n                        App.enableSubmitInFormGithubProfile()\n                    })\n            })\n            .catch(reason => {\n                console.error(reason)\n                App.setLoadingMessage('')\n                App.enableSubmitInFormGithubProfile()\n            })\n            .finally(() => {})\n    }\n\n\n    handleRepositoryClick(event) {\n        event.preventDefault()\n\n        let {target} = event\n\n        if (!target.classList.contains('Repository')) {\n            target = target.closest('.Repository')\n        }\n\n        const {url} = target.dataset\n\n        window.location.href = url\n    }\n\n\n    handleRepositoriesVisibilityClick(event) {\n        event.preventDefault()\n\n        const {target} = event\n\n        const {value} = target.dataset\n\n        const listButton = target.closest('.list-button')\n\n        const currentActivebutton = listButton.querySelector('button.active')\n        if (!!currentActivebutton) currentActivebutton.classList.remove('active')\n\n        target.classList.add('active')\n\n        this.updateRepositoriesVisibility(value)\n\n        App.toggleRepositoriesVisibility()\n    }\n\n\n    updateProfile(profile) {\n        console.log('App : updateProfile()', {profile})\n        if (!profile) profile = {}\n        localStorage.setItem(App.KEY_PROFILE_CACHE, JSON.stringify(profile))\n        this.setState({profile})\n    }\n\n\n    updateRepositories(repositories = {}) {\n        console.log('App : updateRepositories()', {repositories})\n        if (!repositories) repositories = {}\n        localStorage.setItem(App.KEY_REPOSITORIES_CACHE, JSON.stringify(repositories))\n        this.setState({repositories})\n    }\n\n\n    updateGists(gists = {}) {\n        console.log('App : updateGists()', {gists})\n        if (!gists) gists = {}\n        localStorage.setItem(App.KEY_GISTS_CACHE, JSON.stringify(gists))\n        this.setState({gists})\n    }\n\n\n    updateRepositoriesVisibility(repositoriesVisibility = 'all') {\n        console.log('App : updateRepositoriesVisibility()', {repositoriesVisibility})\n        localStorage.setItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE, repositoriesVisibility)\n        this.setState({repositoriesVisibility})\n    }\n\n\n    static showPortfolioSection() {\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('show')\n        portfolioSection.classList.remove('hide')\n\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('hide')\n\n        portfolioSection.scroll({top: 0})\n\n        App.clickOnRepositoriesVisibilityAll()\n    }\n\n\n    static showMainSection() {\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('show')\n        mainSection.classList.remove('hide')\n\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('hide')\n    }\n\n\n    static handleDocumentKeypress(event) {\n        const {keyCode} = event\n        if (27 === keyCode) App.showMainSection()\n    }\n\n\n    static toggleRepositoriesVisibility() {\n        let repositoriesVisibility = localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n        if (!repositoriesVisibility) return;\n\n        const repositories = document.querySelectorAll('.Repository')\n        for (let repository of repositories) {\n\n            const {isFork} = repository.dataset;\n\n            if ('owns' === repositoriesVisibility && \"true\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            if ('forks' === repositoriesVisibility && \"false\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            repository.classList.remove('hide')\n\n        }\n    }\n\n\n    static handleErrorUnknownUser() {\n        App.removeClassHasErrorForFormGithubProfile('invalid-username')\n        App.removeClassHasErrorForFormGithubProfile('api-rate-limit-exceeded')\n        App.addClassHasErrorForFormGithubProfile('unknown-user')\n    }\n\n    static handleErrorAPIRateLimitExceeded() {\n        App.removeClassHasErrorForFormGithubProfile('invalid-username')\n        App.removeClassHasErrorForFormGithubProfile('unknown-user')\n        App.addClassHasErrorForFormGithubProfile('api-rate-limit-exceeded')\n    }\n\n\n    static handleErrorInvalidUsername() {\n        App.removeClassHasErrorForFormGithubProfile('unknown-user')\n        App.removeClassHasErrorForFormGithubProfile('api-rate-limit-exceeded')\n        App.addClassHasErrorForFormGithubProfile('invalid-username')\n    }\n\n\n    static addClassHasErrorForFormGithubProfile(type) {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.add('has-error')\n        formGithubProfile.classList.add('has-error-' + type)\n\n        setTimeout(() => {\n            formGithubProfile.classList.remove('has-error')\n            formGithubProfile.classList.remove('has-error-' + type)\n        }, 3000)\n    }\n\n\n    static removeClassHasErrorForFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.remove('has-error')\n        formGithubProfile.classList.remove('has-error-unknown-user')\n        formGithubProfile.classList.remove('has-error-invalid-username')\n        formGithubProfile.classList.remove('has-error-api-rate-limit-exceeded')\n    }\n\n\n    static disableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        submitButton.setAttribute('disabled', 'disabled')\n    }\n\n\n    static enableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        submitButton.removeAttribute('disabled')\n    }\n\n\n    static isEnableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        return false === submitButton.hasAttribute('disabled')\n    }\n\n\n    static handleBackClick(event) {\n        event.preventDefault()\n\n        App.showMainSection()\n    }\n\n    static setLoadingMessage(message) {\n        const loadingWrapper = document.querySelector('.App-section-main-loading-wrapper')\n        loadingWrapper.innerHTML = message\n    }\n\n    static clickOnRepositoriesVisibilityAll() {\n        const repositoriesVisibility = document.querySelector('.list-button[data-name=\"repositories-visibility\"]')\n        const allButton = repositoriesVisibility.querySelector('button[data-value=\"all\"]')\n        allButton.click()\n    }\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './scripts/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}